{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdb81\\\\OneDrive\\\\Desktop\\\\Automated-Canteen-System\\\\frontend\\\\src\\\\components\\\\KitchenView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api/orders';\nfunction KitchenView() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get(API_URL);\n      setOrders(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch orders:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchOrders();\n    const interval = setInterval(fetchOrders, 5000); // Poll for new orders every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const updateOrderStatus = async (orderId, newStatus) => {\n    try {\n      await axios.put(`${API_URL}/${orderId}`, {\n        status: newStatus\n      });\n      fetchOrders(); // Refresh list after update\n    } catch (error) {\n      console.error(\"Failed to update order status:\", error);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Received':\n        return 'bg-blue-100 text-blue-800';\n      case 'Preparing':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Ready for Pickup':\n        return 'bg-green-100 text-green-800';\n      case 'Completed':\n        return 'bg-gray-200 text-gray-600';\n      default:\n        return 'bg-gray-100';\n    }\n  };\n  const renderOrdersByStatus = status => {\n    return orders.filter(order => order.status === status).map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-md mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-bold text-lg text-gray-800\",\n          children: order.orderId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `px-3 py-1 text-sm font-semibold rounded-full ${getStatusColor(order.status)}`,\n          children: order.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-gray-600 space-y-1 mb-4\",\n        children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.quantity, \"x \", item.name]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [order.status === 'Received' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateOrderStatus(order._id, 'Preparing'),\n          className: \"bg-yellow-500 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-yellow-600 transition-colors\",\n          children: \"Start Preparing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), order.status === 'Preparing' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateOrderStatus(order._id, 'Ready for Pickup'),\n          className: \"bg-green-500 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-green-600 transition-colors\",\n          children: \"Mark as Ready\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), order.status === 'Ready for Pickup' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateOrderStatus(order._id, 'Completed'),\n          className: \"bg-gray-500 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-gray-600 transition-colors\",\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, order._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-gray-800 mb-6\",\n      children: \"Kitchen Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4 text-blue-700\",\n          children: \"Received\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded-lg min-h-[200px]\",\n          children: renderOrdersByStatus('Received')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4 text-yellow-700\",\n          children: \"Preparing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded-lg min-h-[200px]\",\n          children: renderOrdersByStatus('Preparing')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4 text-green-700\",\n          children: \"Ready for Pickup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded-lg min-h-[200px]\",\n          children: renderOrdersByStatus('Ready for Pickup')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(KitchenView, \"WpfbmeCogRdvFm3anyPVYEDd7i0=\");\n_c = KitchenView;\nvar _c;\n$RefreshReg$(_c, \"KitchenView\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","KitchenView","_s","orders","setOrders","isLoading","setIsLoading","fetchOrders","response","get","data","error","console","interval","setInterval","clearInterval","updateOrderStatus","orderId","newStatus","put","status","getStatusColor","renderOrdersByStatus","filter","order","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","items","item","index","quantity","name","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/pdb81/OneDrive/Desktop/Automated-Canteen-System/frontend/src/components/KitchenView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5001/api/orders';\r\n\r\nfunction KitchenView() {\r\n    const [orders, setOrders] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const fetchOrders = async () => {\r\n        try {\r\n            const response = await axios.get(API_URL);\r\n            setOrders(response.data);\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch orders:\", error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchOrders();\r\n        const interval = setInterval(fetchOrders, 5000); // Poll for new orders every 5 seconds\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const updateOrderStatus = async (orderId, newStatus) => {\r\n        try {\r\n            await axios.put(`${API_URL}/${orderId}`, { status: newStatus });\r\n            fetchOrders(); // Refresh list after update\r\n        } catch (error) {\r\n            console.error(\"Failed to update order status:\", error);\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'Received': return 'bg-blue-100 text-blue-800';\r\n            case 'Preparing': return 'bg-yellow-100 text-yellow-800';\r\n            case 'Ready for Pickup': return 'bg-green-100 text-green-800';\r\n            case 'Completed': return 'bg-gray-200 text-gray-600';\r\n            default: return 'bg-gray-100';\r\n        }\r\n    };\r\n\r\n    const renderOrdersByStatus = (status) => {\r\n        return orders\r\n            .filter(order => order.status === status)\r\n            .map(order => (\r\n                <div key={order._id} className=\"bg-white p-4 rounded-lg shadow-md mb-4\">\r\n                    <div className=\"flex justify-between items-center mb-3\">\r\n                        <h4 className=\"font-bold text-lg text-gray-800\">{order.orderId}</h4>\r\n                        <span className={`px-3 py-1 text-sm font-semibold rounded-full ${getStatusColor(order.status)}`}>\r\n                            {order.status}\r\n                        </span>\r\n                    </div>\r\n                    <ul className=\"text-sm text-gray-600 space-y-1 mb-4\">\r\n                        {order.items.map((item, index) => (\r\n                            <li key={index}>{item.quantity}x {item.name}</li>\r\n                        ))}\r\n                    </ul>\r\n                    <div className=\"flex space-x-2\">\r\n                        {order.status === 'Received' && (\r\n                            <button onClick={() => updateOrderStatus(order._id, 'Preparing')} className=\"bg-yellow-500 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-yellow-600 transition-colors\">Start Preparing</button>\r\n                        )}\r\n                        {order.status === 'Preparing' && (\r\n                            <button onClick={() => updateOrderStatus(order._id, 'Ready for Pickup')} className=\"bg-green-500 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-green-600 transition-colors\">Mark as Ready</button>\r\n                        )}\r\n                         {order.status === 'Ready for Pickup' && (\r\n                            <button onClick={() => updateOrderStatus(order._id, 'Completed')} className=\"bg-gray-500 text-white text-sm font-bold py-1 px-3 rounded-lg hover:bg-gray-600 transition-colors\">Mark as Completed</button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-3xl font-bold text-gray-800 mb-6\">Kitchen Dashboard</h2>\r\n            {isLoading ? <p>Loading orders...</p> : (\r\n                <div className=\"grid md:grid-cols-3 gap-6\">\r\n                    <div>\r\n                        <h3 className=\"text-xl font-semibold mb-4 text-blue-700\">Received</h3>\r\n                        <div className=\"bg-gray-50 p-4 rounded-lg min-h-[200px]\">{renderOrdersByStatus('Received')}</div>\r\n                    </div>\r\n                    <div>\r\n                        <h3 className=\"text-xl font-semibold mb-4 text-yellow-700\">Preparing</h3>\r\n                        <div className=\"bg-gray-50 p-4 rounded-lg min-h-[200px]\">{renderOrdersByStatus('Preparing')}</div>\r\n                    </div>\r\n                    <div>\r\n                        <h3 className=\"text-xl font-semibold mb-4 text-green-700\">Ready for Pickup</h3>\r\n                        <div className=\"bg-gray-50 p-4 rounded-lg min-h-[200px]\">{renderOrdersByStatus('Ready for Pickup')}</div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}